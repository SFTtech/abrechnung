name: Tests
on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit
          flit install --symlink --deps develop
      - name: Analysing the code with pylint
        run: make pylint

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit
          flit install --symlink --deps develop
      - name: Analysing the code with mypy
        run: make mypy

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
        - "3.9"
        - "3.10"
        os: [ubuntu-latest]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: "password"
          POSTGRES_USER: "abrechnung"
          POSTGRES_DB: "abrechnung"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      TEST_DB_USER: "abrechnung"
      TEST_DB_HOST: "localhost"
      TEST_DB_DATABASE: "abrechnung"
      TEST_DB_PASSWORD: "password"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit
          flit install --symlink --deps develop
      - name: Run all tests
        run: pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit
          flit install --symlink --deps develop
      - name: Check formatting
        run: make check-format

  format-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: web/yarn.lock
      - name: Install dependencies
        run: yarn --cwd web install --dev
      - name: Check JavaScript formatting
        run: make check-format-web
